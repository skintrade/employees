// === === ===
// MEASURES
// === === ===

// unit tidying

@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

// mixin does rem / em / px!
//
// EXAMPLE USAGE - 
// @include sizing(rem,padding,2,3,4,5);
// @include sizing(em,margin,0);
// @include sizing(px,border-width,1);
//

@mixin sizing($measures, $property, $values...) {
    $zeroValue : '';
    $max : length($values);
    $pxValues : '';
    $remValues : '';
    $emValues : '';
    // IF REM MEASURES
    @if $measures == rem {
        @for $i from 1 through $max {
            $value : strip-unit(nth($values, $i));
            $valuePx : #{round($value *(16*($baseMultiplier / 100)))};
            $valueRem : #{$remValues + $value};
            @if $value == 0 {
                $pxValues : #{$pxValues + $valuePx};
                $remValues : #{$remValues + $value};
                $zeroValue : 0;
            } @else {
                $pxValues : #{$pxValues + $valuePx}px;
                $remValues : #{$remValues + $value}rem;
            }
            @if $i < $max {
                $pxValues : #{$pxValues + " "};
                $remValues : #{$remValues + " "};
            }
        }
        @if $max == 1 {
            @if $zeroValue == 0 {
                #{$property}: $pxValues;
            } @else {
                #{$property}: $pxValues;
                #{$property}: $remValues;
            }
        } @else {
            #{$property}: $pxValues;
            #{$property}: $remValues;
        }
    }

    // IF EM MEASURE NO PX TRANSLATION REQ
    @if $measures == em {
        @for $i from 1 through $max {
            $value : strip-unit(nth($values, $i));
            $valueEm : #{$emValues + $value};
            @if $value == 0 {
                $emValues : #{$emValues + $value};
                $zeroValue : 0;
            } @else {
                $emValues : #{$emValues + $value}em;
            }
            @if $i < $max {
                $emValues : #{$emValues + " "};
            }
        }
        @if $max == 1 {
            #{$property}: $emValues;
        } @else {
            #{$property}: $emValues;
        }
    }

    // IF PIXELS ONLY
    @if $measures == px {
        @for $i from 1 through $max {
            $value : strip-unit(nth($values, $i));
            $valuePx : #{$value};
            @if $value == 0 {
                $pxValues : #{$pxValues + $valuePx};
                $zeroValue : 0;
            } @else {
                $pxValues : #{$pxValues + $valuePx}px;
            }
            @if $i < $max {
                $pxValues : #{$pxValues + " "};
            }
        }
        @if $max == 1 {
            #{$property}: $pxValues;
        } @else {
            #{$property}: $pxValues;
        }
    }
}
